module ALU(clk,
				in1,
				in2, 
				op, 
				result,
				status);
	output reg [4:0] status; // from LSB these are carry-out, negative, zero, parity (odd), overflow
	output reg [31:0] result;
	input clk;
	input [31:0] in1, in2;
	input [3:0] op; //This will be generated by the control unit
						//Starting at 0001, these are AND, OR, XOR, ADD, SUB
						
	always @(posedge clk) begin
		case(op)
			4'b0001 : begin //AND
				result <= in1 & in2;
				status <= 5'b0;
			end
			4'b0010 : begin //OR
				result <= in1 | in2;
				status <= 5'b0;
			end
			4'b0011 : begin //XOR
				result <= in1 ^ in2;
				status <= 5'b0;
			end
			4'b0100 : begin //ADD
				result <= in1 + in2;
				status[0] <= in1[30] & in2[30];
				status[1] <= 0;
				status[2] <= result[31];
				status[3] <= 0;
				status[4] <= (~in1[31] & ~in2[31]) & in1[30] & in2[30];
			end
			4'b0101 : begin//SUB
				result <= in1 - in2;
				
			end
			4'b0110 : begin 
			
			end
			4'b0111 : begin 
			
			end
			4'b1000 : begin
			
			end
			4'b1001 : begin
			
			end
			4'b1010 : begin 
			
			end
			4'b1011 : begin
			
			end
			4'b1100 : begin
			
			end
			
			4'b1101 : begin
			
			end
			
			4'b1110 : begin
			
			end
			
			4'b1111 : begin
			
			end
		endcase
	end
endmodule